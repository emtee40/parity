ADD_EXTRA_DIST('parity.sln')
ADD_EXTRA_DIST('ReleaseNotes.txt')

CONFIGURE_AC(
	lines=['AC_CONFIG_FILES(parity-setup parity.gnu.ar/parity.gnu.ar)'],
	order=AC_BOILERPLATE)

MAKEFILE_AM(line='sbin_SCRIPTS = parity-setup')

acm4 = """

AC_DEFUN([PARITY_DIR], [
	prefix_NONE=
	exec_prefix_NONE=
	test "x$prefix" = xNONE && prefix_NONE=yes && prefix=$ac_default_prefix
	test "x$exec_prefix" = xNONE && exec_prefix_NONE=yes && exec_prefix=$prefix
	eval ac_define_dir="\"[$]$2\""
	eval ac_define_dir="\"$ac_define_dir\""
	AC_SUBST($1, "$ac_define_dir")
	AC_DEFINE_UNQUOTED($1, "$ac_define_dir", [$3])
	test "$prefix_NONE" && prefix=NONE
	test "$exec_prefix_NONE" && exec_prefix=NONE
])

AC_DEFUN([PARITY_CONFIGURE],
[
	PARITY_DIR([PARITY_SYSCONFDIR], ['${sysconfdir}/${PACKAGE}/${VERSION}'],
		[Path where configuration is installed])
	PARITY_DIR([PARITY_INCLUDEDIR], ['${includedir}'],
		[Path where header files are installed])
	PARITY_DIR([PARITY_LIBDIR], ['${libdir}/${PACKAGE}/${VERSION}'],
		[Path where libraries are installed])
	PARITY_DIR([PARITY_BINDIR], ['${bindir}'],
		[Path where executables are installed])
	AC_SUBST([LN_S], [${as_ln_s}])
])

"""

ACINCLUDE_M4(lines=[acm4])

CONFIGURE_AC(
	lines=['PARITY_CONFIGURE'],
	order=AC_PROGRAMS)

CONFIGURE_AC(
    lines=['ACX_PTHREAD'],
    order=AC_PROGRAMS)

import os
import re

_re_cfile = re.compile('^.*\\.(c|cc|cpp)$')
_re_hfile = re.compile('^.*\\.h$')
_re_invalid_variable_character = re.compile('[^a-zA-Z0-9]')

for dir in [
	'parity.runtime',
	'parity.runtime/internal',
	'parity.runtime/sys',
	'parity.loader',
]:
	dirvar = re.sub(_re_invalid_variable_character, '_', dir)
	MAKEFILE_AM(line=dirvar + 'dir = $(PARITY_LIBDIR)/' + dir)
	MAKEFILE_AM(line=dirvar + 'includedir = $(PARITY_LIBDIR)/include/' + dir)
	ADD_EXTRA_DIST('$(' + dirvar + '_DATA)')
	ADD_EXTRA_DIST('$(' + dirvar + 'include_DATA)')
	libcfiles = []
	libhfiles = []
	for file in os.listdir(dir):
		if os.path.isfile(dir + '/' + file):
			if _re_cfile.match(file):
				libcfiles.append(dir + '/' + file)
			if _re_hfile.match(file):
				libhfiles.append(dir + '/' + file)
	MAKEFILE_AM(line=dirvar + '_DATA = ' + ' \\\n\t'.join(libcfiles))
	MAKEFILE_AM(line=dirvar + 'include_DATA = ' + ' \\\n\t'.join(libhfiles))

MAKEFILE_AM(line='''
install-setup-files: install-recursive
	chosts=`"$(DESTDIR)$(sbindir)/parity-setup" --list-supported; "$(DESTDIR)$(sbindir)/parity-setup" --list-supported --default`; \\
	cd "$(DESTDIR)$(bindir)" || exit 1 ; \\
	for chost in $${chosts}; do \\
		$(LN_S) -f parity.gnu.gcc$(EXEEXT) $${chost}-gcc || exit 1 ; \\
		$(LN_S) -f parity.gnu.gcc$(EXEEXT) $${chost}-g++ || exit 1 ; \\
		$(LN_S) -f parity.gnu.ld$(EXEEXT) $${chost}-ld || exit 1 ; \\
		$(LN_S) -f parity.gnu.windres$(EXEEXT) $${chost}-windres || exit 1 ; \\
		$(LN_S) -f parity.gnu.ar $${chost}-ar || exit 1 ; \\
		$(LN_S) -f parity.gnu.dumpbin $${chost}-dumpbin || exit 1 ; \\
		$(LN_S) -f parity.gnu.ranlib $${chost}-ranlib || exit 1 ; \\
		$(LN_S) -f parity.ms.cl$(EXEEXT) $${chost}-cl || exit 1 ; \\
		$(LN_S) -f parity.ms.link$(EXEEXT) $${chost}-link || exit 1 ; \\
	done
	"$(DESTDIR)$(sbindir)/parity-setup" --destdir="$(DESTDIR)" --install

install: install-setup-files

uninstall-setup-files:
	chosts=`"$(DESTDIR)$(sbindir)/parity-setup" --list-supported; "$(DESTDIR)$(sbindir)/parity-setup" --list-supported --default`; \\
	cd "$(DESTDIR)$(bindir)" || exit 0 ; \\
	for chost in $${chosts}; do \\
		rm -f $${chost}-gcc ; \\
		rm -f $${chost}-g++ ; \\
		rm -f $${chost}-ld ; \\
		rm -f $${chost}-windres ; \\
		rm -f $${chost}-ar ; \\
		rm -f $${chost}-dumpbin ; \\
		rm -f $${chost}-ranlib ; \\
		rm -f $${chost}-cl ; \\
		rm -f $${chost}-link ; \\
	done ; :
	"$(DESTDIR)$(sbindir)/parity-setup" --destdir="$(DESTDIR)" --uninstall ; :

uninstall-recursive: uninstall-setup-files
''')
