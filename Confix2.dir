ADD_EXTRA_DIST('parity.sln')
ADD_EXTRA_DIST('ReleaseNotes.txt')

CONFIGURE_AC(
	lines=['AC_CONFIG_FILES(parity-setup parity.gnu.ar/parity.gnu.ar parity.gnu.nm/parity.gnu.dumpbin)'],
	order=AC_BOILERPLATE)

MAKEFILE_AM(line='sbin_SCRIPTS = parity-setup')

acm4 = """

AC_DEFUN([PARITY_DIR], [
	prefix_NONE=
	exec_prefix_NONE=
	test "x$prefix" = xNONE && prefix_NONE=yes && prefix=$ac_default_prefix
	test "x$exec_prefix" = xNONE && exec_prefix_NONE=yes && exec_prefix=$prefix
	eval ac_define_dir="\"[$]$2\""
	eval ac_define_dir="\"$ac_define_dir\""
	AC_SUBST($1, "$ac_define_dir")
	AC_DEFINE_UNQUOTED($1, "$ac_define_dir", [$3])
	test "$prefix_NONE" && prefix=NONE
	test "$exec_prefix_NONE" && exec_prefix=NONE
])

AC_DEFUN([PARITY_CONFIGURE],
[
	PARITY_DIR([PARITY_SYSCONFDIR], ['${sysconfdir}/${PACKAGE}/${VERSION}'],
		[Path where configuration is installed])
	PARITY_DIR([PARITY_INCLUDEDIR], ['${includedir}'],
		[Path where header files are installed])
	PARITY_DIR([PARITY_LIBDIR], ['${libdir}/${PACKAGE}/${VERSION}'],
		[Path where libraries are installed])
	PARITY_DIR([PARITY_BINDIR], ['${bindir}'],
		[Path where executables are installed])
	AC_SUBST([LN_S], [${as_ln_s}])

	AC_MSG_CHECKING([for MSVC architectures to support])
	AC_ARG_ENABLE([msvc-archs],
	  [AS_HELP_STRING([--enable-msvc-archs=[[x86,x64]]],
		[Enable support for MSVC architectures, with the first one used as fallback.])],
	  [enable_msvc_archs=
	   as_save_IFS=$IFS
	   IFS=,
	   for parityarch in ${enableval:-yes}
	   do
	     IFS=$as_save_IFS
#
# Sync list of supported architectures with defaults in parity-setup.in
#
		 AS_CASE([$parityarch],
		   [x64|amd64|x86_64], [parityarch=x64],
		   [x86|i?86],         [parityarch=x86],
		   [yes], [AC_MSG_ERROR([Need specific argument to --enable-msvc-archs.])],
		   [AC_MSG_ERROR([Unknown argument $parityarch to --enable-msvc-archs.])])
		 AS_CASE([" $enable_msvc_archs "],
		   [*" $parityarch "*], [],
		   ["  "], [enable_msvc_archs=$parityarch],
		   [enable_msvc_archs="$enable_msvc_archs $parityarch"])
	   done
	   IFS=$as_save_IFS],
	  [enable_msvc_archs="x86 x64"])
	AC_SUBST([PARITY_SUPPORTED_ARCHS], [$enable_msvc_archs])
	AC_DEFINE_UNQUOTED([PARITY_DEFAULT_ARCH], ["${enable_msvc_archs%% *}"],
	  [Fallback MSVC architecture.])
	AC_MSG_RESULT([$PARITY_SUPPORTED_ARCHS])
])

"""

ACINCLUDE_M4(lines=[acm4])

CONFIGURE_AC(
	lines=['PARITY_CONFIGURE'],
	order=AC_PROGRAMS)

CONFIGURE_AC(
    lines=['ACX_PTHREAD'],
    order=AC_PROGRAMS)

import os
import re

_re_cfile = re.compile('^.*\\.(c|cc|cpp)$')
_re_hfile = re.compile('^.*\\.h$')
_re_invalid_variable_character = re.compile('[^a-zA-Z0-9]')

for dir in [
	'parity.runtime',
	'parity.runtime/internal',
	'parity.runtime/sys',
	'parity.loader',
]:
	dirvar = re.sub(_re_invalid_variable_character, '_', dir)
	MAKEFILE_AM(line=dirvar + 'dir = $(PARITY_LIBDIR)/' + dir)
	MAKEFILE_AM(line=dirvar + 'includedir = $(PARITY_LIBDIR)/include/' + dir)
	ADD_EXTRA_DIST('$(' + dirvar + '_DATA)')
	ADD_EXTRA_DIST('$(' + dirvar + 'include_DATA)')
	libcfiles = []
	libhfiles = []
	for file in os.listdir(dir):
		if os.path.isfile(dir + '/' + file):
			if _re_cfile.match(file):
				libcfiles.append(dir + '/' + file)
			if _re_hfile.match(file):
				libhfiles.append(dir + '/' + file)
	MAKEFILE_AM(line=dirvar + '_DATA = ' + ' \\\n\t'.join(libcfiles))
	MAKEFILE_AM(line=dirvar + 'include_DATA = ' + ' \\\n\t'.join(libhfiles))

MAKEFILE_AM(line='''
install-setup-files: install-recursive
	chosts=`"$(DESTDIR)$(sbindir)/parity-setup" --list-supported`; \\
	defchosts=`"$(DESTDIR)$(sbindir)/parity-setup" --list-supported --default`; \\
	cd "$(DESTDIR)$(bindir)" || exit $$? ; \\
	for chost in $${chosts} $${defchosts} ; do \\
		$(LN_S) -f parity.gnu.gcc$(EXEEXT) $${chost}-gcc || exit $$? ; \\
		$(LN_S) -f parity.gnu.gcc$(EXEEXT) $${chost}-g++ || exit $$? ; \\
		$(LN_S) -f parity.gnu.ld$(EXEEXT) $${chost}-ld || exit $$? ; \\
		$(LN_S) -f parity.gnu.windres$(EXEEXT) $${chost}-windres || exit $$? ; \\
		$(LN_S) -f parity.gnu.ar $${chost}-ar || exit $$? ; \\
		$(LN_S) -f parity.gnu.dumpbin $${chost}-dumpbin || exit $$? ; \\
		$(LN_S) -f parity.gnu.ranlib $${chost}-ranlib || exit $$? ; \\
		$(LN_S) -f parity.ms.cl$(EXEEXT) $${chost}-cl || exit $$? ; \\
		$(LN_S) -f parity.ms.link$(EXEEXT) $${chost}-link || exit $$? ; \\
	done ; \\
	for chost in $${defchosts} ; do \\
		$(MKDIR_P) "$(DESTDIR)$(exec_prefix)/$${chost}/bin" || exit $$? ; \\
		cd "$(DESTDIR)$(exec_prefix)/$${chost}/bin" || exit $$? ; \\
		trap "rm -f '$(DESTDIR)$(exec_prefix)/$${chost}/bin/parityscript'" 0 || exit $$? ; \
		case $${chost%%-*} in \\
		x64|x86_64|amd64) mopt=-m64 ;; \\
		x86|i?86*) mopt=-m32 ;; \\
		esac ; \\
		for exe in gcc ld windres ar dumpbin ranlib ; do \\
			{ echo "#! /bin/sh" ; \\
			  echo "exec '$(bindir)/parity.gnu.$${exe}' $${mopt} "'"$$@"' ; \\
			} > parityscript || exit $$? ; \\
			$(INSTALL_SCRIPT) parityscript "$(DESTDIR)$(exec_prefix)/$${chost}/bin/$${exe}" || exit $$? ; \\
			rm -f parityscript || exit $$? ; \\
		done ; \\
		{ echo "#! /bin/sh" ; \\
		  echo "exec '$(bindir)/parity.gnu.gcc' $${mopt} "'"$$@"' ; \\
		} > parityscript || exit $$? ; \\
		$(INSTALL_SCRIPT) parityscript "$(DESTDIR)$(exec_prefix)/$${chost}/bin/g++" || exit $$? ; \\
		rm -f parityscript || exit $$? ; \\
		for exe in cl link ; do \\
			{ echo "#! /bin/sh" ; \\
			  echo "exec '$(bindir)/parity.ms.$${exe}' $${mopt} "'"$$@"' ; \\
			} > parityscript || exit $$? ; \\
			$(INSTALL_SCRIPT) parityscript "$(DESTDIR)$(exec_prefix)/$${chost}/bin/$${exe}" || exit $$? ; \\
			rm -f parityscript || exit $$? ; \\
		done ; \\
	done
	"$(DESTDIR)$(sbindir)/parity-setup" --destdir="$(DESTDIR)" --install

install: install-setup-files

uninstall-setup-files:
	chosts=`"$(DESTDIR)$(sbindir)/parity-setup" --list-supported; "$(DESTDIR)$(sbindir)/parity-setup" --list-supported --default`; \\
	cd "$(DESTDIR)$(bindir)" || exit 0 ; \\
	for chost in $${chosts}; do \\
		rm -f $${chost}-gcc ; \\
		rm -f $${chost}-g++ ; \\
		rm -f $${chost}-ld ; \\
		rm -f $${chost}-windres ; \\
		rm -f $${chost}-ar ; \\
		rm -f $${chost}-dumpbin ; \\
		rm -f $${chost}-ranlib ; \\
		rm -f $${chost}-cl ; \\
		rm -f $${chost}-link ; \\
	done ; :
	"$(DESTDIR)$(sbindir)/parity-setup" --destdir="$(DESTDIR)" --uninstall ; :

uninstall-recursive: uninstall-setup-files
''')
