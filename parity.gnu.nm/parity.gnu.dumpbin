#!/usr/bin/env bash

type unixpath2win >/dev/null 2>&1 || unixpath2win() { cygpath -w "$1"; }
type winpath2unix >/dev/null 2>&1 || winpath2unix() { cygpath -u "$1"; }

vsvar=
[[ -n "${VS71COMNTOOLS}" ]] && vsvar=VS71COMNTOOLS
[[ -n "${VS80COMNTOOLS}" ]] && vsvar=VS80COMNTOOLS
[[ -n "${VS90COMNTOOLS}" ]] && vsvar=VS90COMNTOOLS
[[ -n "${VS100COMNTOOLS}" ]] && vsvar=VS100COMNTOOLS

if [[ -n ${vsvar} ]]; then
    vscom="$(winpath2unix "$(eval echo "\${${vsvar}}")")"
    vsroot="$(cd "${vscom}/../../"; pwd)"
elif [[ -r /proc/registry/HKEY_LOCAL_MACHINE/SOFTWARE/Wow6432Node/Microsoft/VisualStudio/SxS/VS7/9.0 ]]; then
    vsroot=$(winpath2unix "$(tr -d $"\0" </proc/registry/HKEY_LOCAL_MACHINE/SOFTWARE/Wow6432Node/Microsoft/VisualStudio/SxS/VS7/9.0)")
    vsroot=${vsroot%%/}
    vscom=${vsroot}/Common7/Tools
else
    echo "cannot find visual studio (no VSxxCOMNTOOLS set!)"
    exit 1
fi

[[ -z "${vsroot}" ]] && { echo "error: cannot find visual studio installation directory"; exit 1; }
PATH=${vsroot}/VC/bin:${vscom}:${vscom}/../IDE:${PATH}

args=()
for arg in "$@"
do
	if [[ -r $arg ]]
	then
		arg=$(unixpath2win "$arg")
	fi
	args+=("$arg")
done

dumpbin.exe "${args[@]}"

